// Generated by CoffeeScript 1.9.1
(function() {
  var Atop, Promise, TuyaAtop, _, crypto, debug, error, fetch, handles, log, qs,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Promise = require("bluebird");

  crypto = require('crypto');

  qs = require('querystring');

  fetch = require('node-fetch');

  _ = require('lodash');

  handles = require('./handles');

  debug = require('debug');

  log = debug('atop:debug');

  log.log = console.log.bind(console);

  error = debug('atop:error');

  Atop = require('./atop');

  TuyaAtop = (function(superClass) {
    extend(TuyaAtop, superClass);

    function TuyaAtop() {
      return TuyaAtop.__super__.constructor.apply(this, arguments);
    }

    TuyaAtop.prototype.processData = function(methodName, data, lang) {
      var body, method, midden, params, postDataSign, sign, signOrderKeys, signStr, temp, time;
      if (lang == null) {
        lang = 'zh_CN';
      }
      method = this.atopAPIDict.methods[methodName];
      if (!method) {
        console.error('找不到 atop 方法', methodName);
      }
      params = _.extend(_.omit(this.atopAPIDict, 'methods', 'withSid', 'withoutSid'), {
        a: method.name,
        v: method.v,
        lang: lang
      });
      method.sid && (params.sid = data.sid);
      postDataSign = crypto.createHash('md5').update(JSON.stringify(data.postData || {}), 'utf8').digest('hex');
      midden = postDataSign.substring(8, 24);
      temp = midden.substring(0, 8);
      temp = temp + postDataSign.substring(0, 8);
      temp = temp + postDataSign.substring(24, 32);
      temp = temp + midden.substring(8, 16);
      time = this.__getNowTimestramp();
      signOrderKeys = method.sid ? this.atopAPIDict.withSid : this.atopAPIDict.withoutSid;
      signStr = signOrderKeys.map(function(name) {
        return [name, params[name]].join('=');
      }).join('||');
      signStr = this.conf.appkey + signStr + temp + time;
      sign = crypto.createHash('md5').update(signStr, 'utf8').digest('hex');
      delete params.appSecret;
      params.sign = sign;
      params.time = time;
      params.postData = JSON.stringify(data.postData || {});
      body = qs.stringify(params, null, null, {
        encodeURIComponent: this.__encodeNothing
      });
      log(signStr);
      log(params);
      log(body);
      return body;
    };

    return TuyaAtop;

  })(Atop);

  module.exports = TuyaAtop;

}).call(this);
